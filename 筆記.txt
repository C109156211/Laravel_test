框架用意為統一格式，限制寫法，方便管理、交接


【MVC】
MVC為基礎框架
M model
V view (模板)
C contrl寫控制器管理

【Laravel PHP框架】
[維護性][擴充性]、市占率高

【Docker】
將sever架在docker上，換系統時方便，不用重新建置環境

【git vs. github】
git軟體 github=>server

【下載資料夾】
git clone github專案網址

複製一份.env.example 改為.env

#啟動服務 步驟，需關掉xampp
docker compose up nginx mariadb phpmyadmin -d

/var/www 為虛擬環境

重啟windows
net stop winnat
net start winnat


上傳到github，需在自己專案下執行
C:\Users\USER\Desktop\全端\Laravel git init

使用者要看的到的東西要放在public，此為laravel的預設

修改laradock .env


【環境 - 建立migration】
Step1. php artisan make:migration create_test
Step2. (laravel.workshop) .env檔改為以下
(
DB_CONNECTION=mariadb
DB_HOST=mariadb
DB_PORT=3306
DB_DATABASE=laravel
DB_USERNAME=root
DB_PASSWORD=root
)
**docker裡面要連接的服務，host名稱用名字，不要用網址(ex:127.0.0.1)
Step3. php artisan config:cache //重整服務
Step4. php artisan migration

【清空測試的migrate】
Step1. php artisan migrate:reset
Step2. 刪vscode的migrate
Step3. https://github.com/kejyun/laravel5-for-beginner-shop-laravel
用之前的5個mi上傳到我的專案
Step4. 從新執行php artisan mimigrationgrate

*如果遇到建立session後重開頁面會報錯，在虛擬環境執行:
php artisan session:table 
php artisan migration

【CSRF保護】
用法:
插在form內
@csrf

【資料驗證】
放在前端擋，如密碼驗證
不放在後端是為了減少伺服器負擔

【model】
存取資料表中的欄位

1.註冊成功後跳轉登入畫面
2.註冊時判斷帳號是否重複

中介曾
權限判斷的控制(如:管理者才能編輯商品)
route直接用


*test_manager 123456@gmail.com




taskkill /PID 19808 /F